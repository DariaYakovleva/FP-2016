
==================== FINAL INTERFACE ====================
2016-10-03 15:05:36.3396641 UTC

interface tree-0.1.0.0-JpsvyQa6nxvD4Ud8cPg3VY:MyTree 8001
  interface hash: 40ef4b28ed2982a8c4ad1b969d0472e8
  ABI hash: 747fd4db62d35ed84893c94e154b1f5f
  export-list hash: 60039db7cd9f1fa6eb59b2b36c570285
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 548bd9ccadc75489d734695739678998
  sig of: Nothing
  used TH splices: False
  where
exports:
  MyTree.delete
  MyTree.find
  MyTree.insert
  MyTree.next
  TreePrinters.directoryPrint
  TreePrinters.verticalPrint
  TreePrinters.Tree{TreePrinters.Leaf TreePrinters.Node}
module dependencies: TreePrinters
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  TreePrinters 1b49633a9ab6dcfa5359c3a9191a93d3
  exports: 9ebdd32986f1e74e86be8deda4df7cb8
  Leaf e190769536fed1df4e637ba9d3c54616
  Node 19ef3e5c43b65ed007870a22870359bd
  Tree 944fd93808ac6b45d4910c76f15dfd64
  directoryPrint b2976abe9748173ff2990c268d018f24
  verticalPrint 10935c9d4690bf3eb106ad60287c23e4
7380ed94086bd693d484c686227349e0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   MyTree.$trModule2
                   MyTree.$trModule1) -}
5eb053109520faefaba621782278e170
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MyTree"#) -}
d6ff2d3f656cf49a70c081e32a0e6b31
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "tree-0.1.0.0-JpsvyQa6nxvD4Ud8cPg3VY"#) -}
e2397f31b7771b28562e60cc739033d3
  $winsert ::
    GHC.Classes.Ord a =>
    TreePrinters.Tree a
    -> a -> (# a, TreePrinters.Tree a, TreePrinters.Tree a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><L,U>,
     Inline: [0] -}
2b278bf561fbc5615250119194e874dd
  delete ::
    GHC.Classes.Ord a =>
    TreePrinters.Tree a -> a -> TreePrinters.Tree a
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><L,U> -}
eaab73fc051fa23efb9e3a6395a0ed02
  find ::
    GHC.Classes.Ord a =>
    TreePrinters.Tree a -> a -> TreePrinters.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><L,U> -}
4346d9c790e707345fae5ebe214bc0e5
  insert ::
    GHC.Classes.Ord a =>
    TreePrinters.Tree a -> a -> TreePrinters.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><L,U>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Classes.Ord a)
                   (w1 :: TreePrinters.Tree a)
                   (w2 :: a) ->
                 case MyTree.$winsert @ a w w1 w2 of ww { (#,,#) ww1 ww2 ww3 ->
                 TreePrinters.Node @ a ww1 ww2 ww3 }) -}
630914713f7db559e0a3e4e31a782dc8
  next ::
    GHC.Classes.Ord a => TreePrinters.Tree a -> a -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

